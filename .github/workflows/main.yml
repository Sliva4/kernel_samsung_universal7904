name: Kernel Builder Action

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Install packages
      run: |
        sudo apt update
        sudo DEBIAN_FRONTEND=noninteractive apt install -y \
          build-essential bc zip curl git \
          libncurses5-dev flex bison \
          python-is-python3 ca-certificates unzip ccache

    - name: Checkout repo
      uses: actions/checkout@v3.5.3
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Symlink libmpfr
      run: |
        LIB_PATH=$(ldconfig -p | grep libmpfr.so.6 | head -n1 | awk '{print $NF}')
        if [ -f "$LIB_PATH" ]; then
          sudo ln -sf "$LIB_PATH" /usr/lib/x86_64-linux-gnu/libmpfr.so.4
          echo "Symlinked libmpfr.so.4 -> $LIB_PATH"
        else
          echo "libmpfr.so.6 not found, aborting."
          exit 1
        fi

    - name: Make defconfig
      run: |
        echo "Building defconfig"
        make ARCH=arm64 exynos7885-a30s_oneui_defconfig -j$(nproc)

    - name: Make kernel
      run: |
        echo "Building kernel"
        make ARCH=arm64 -j$(nproc)

    - name: Build DTB
      run: |
        echo "Building DTB"
        make ARCH=arm64 -j$(nproc) dtb.img
        cp arch/arm64/boot/dtb.img AnyKernel3/dtb.img

    - name: Zip kernel
      shell: bash
      run: |
        if [ ! -f arch/arm64/boot/Image ]; then
          echo "Build failed: Image not found"
          exit 1
        fi

        cp arch/arm64/boot/Image AnyKernel3/Image

        FILES=(
          "Image"
          "version"
          "META-INF/com/google/android/update-binary"
          "META-INF/com/google/android/updater-script"
          "tools/ak3-core.sh"
          "tools/busybox"
          "tools/magiskboot"
          "tools/tweaks.zip"
          "anykernel.sh"
        )

        [ -f "AnyKernel3/dtb.img" ] && FILES+=("dtb.img")

        git submodule update --init

        cd AnyKernel3
        DEVICE="A30s"
        ZIP_NAME="${DEVICE}"
        echo $ZIP_NAME
        zip -r9 "../${ZIP_NAME}.zip" "${FILES[@]}"
        cd ..

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Kernel
        path: A30s.zip
